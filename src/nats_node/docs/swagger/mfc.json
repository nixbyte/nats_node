{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API для сервиса - Предварительная запись в МФЦ",
    "title": "Mfc Service.",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/mfc",
  "paths": {
    "/GetAppState": {
      "get": {
        "description": "GetAppState позволяет получить информацию по заявлению",
        "operationId": "idOfGetAppStateEndpoint",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"19232323\"",
            "x-go-name": "ApplicationId",
            "description": "applicationId - номер заявления",
            "name": "applicationId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponseGetAppState"
          }
        }
      }
    },
    "/GetDates": {
      "get": {
        "description": "GetDates позволяет получить список дат доступных для записи в МФЦ",
        "operationId": "idOfGetDatesEndpoint",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"50c339b67c0cb6da05fcd7320bbd049d2551184be1ec934f94bc2891c3380f1c\"",
            "x-go-name": "Branch",
            "description": "publicId полученный из метода GetMfcList",
            "name": "branch",
            "in": "query",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"049d2551184be1ec934fsfdf34225wef94bc2891c3380f1c\"",
            "x-go-name": "ServiceId",
            "description": "publicId полученный из метода GetMfcServices",
            "name": "serviceId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponseDatesList"
          }
        }
      }
    },
    "/GetMfcList": {
      "get": {
        "description": "GetMfcList позволяет получить список доступных для записи МФЦ",
        "operationId": "idOfGetMfcListEndpoint",
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponseMfcList"
          }
        }
      }
    },
    "/GetMfcServices": {
      "get": {
        "description": "GetMfcServices позволяет получить список сервисов МФЦ",
        "operationId": "idOfGetMfcServicesEndpoint",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"50c339b67c0cb6da05fcd7320bbd049d2551184be1ec934f94bc2891c3380f1c\"",
            "x-go-name": "Branch",
            "description": "publicId полученный из метода GetMfcList",
            "name": "branch",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "ApiResponseMfcServicesList",
            "schema": {
              "$ref": "#/definitions/ApiResponseMfcServicesList"
            }
          }
        }
      }
    },
    "/GetReservationCode": {
      "get": {
        "description": "GetReservatonCode позволяет получить информацию по записи",
        "operationId": "idOfGetReservationCodeEndpoint",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"19232323\"",
            "x-go-name": "PublicId",
            "description": "publicId - параметр из запроса TimeConfirmation",
            "name": "publicId",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponseGetReservationCode"
          }
        }
      }
    },
    "/GetTimes": {
      "get": {
        "description": "GetTimes позволяет получить список времен доступных для записи в МФЦ",
        "operationId": "idOfGetTimesEndpoint",
        "parameters": [
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"50c339b67c0cb6da05fcd7320bbd049d2551184be1ec934f94bc2891c3380f1c\"",
            "x-go-name": "Branch",
            "description": "publicId полученный из метода GetMfcList",
            "name": "branch",
            "in": "query",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"049d2551184be1ec934fsfdf34225wef94bc2891c3380f1c\"",
            "x-go-name": "ServiceId",
            "description": "publicId полученный из метода GetMfcServices",
            "name": "serviceId",
            "in": "query",
            "required": true
          },
          {
            "uniqueItems": true,
            "type": "string",
            "example": "\"2019-07-12\"",
            "x-go-name": "Date",
            "description": "дата полученный из метода GetDates",
            "name": "date",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponseTimesList"
          }
        }
      }
    },
    "/ReserveTime": {
      "post": {
        "description": "ReserverTime - метод резервирования времени в МФЦ",
        "operationId": "idOfReserveTimeEndpoint",
        "parameters": [
          {
            "uniqueItems": true,
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReservationRequestData"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponseReserveTime"
          }
        }
      }
    },
    "/TimeConfirmation": {
      "post": {
        "description": "TimeConfirmation - метод подтверждения записи",
        "operationId": "idOfTimeConfirmationEndpoint",
        "parameters": [
          {
            "uniqueItems": true,
            "name": "Body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ConfirmationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/ApiResponseTimeConfirmation"
          }
        }
      }
    }
  },
  "definitions": {
    "ApiResponseDatesList": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/DatesResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "ApiResponseGetAppState": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/AppStateResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "ApiResponseGetReservationCode": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/ReservationCodeResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "ApiResponseMfcList": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/MfcListResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "ApiResponseMfcServicesList": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/MfcServicesResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "ApiResponseReserveTime": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/ReserveResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "ApiResponseTimeConfirmation": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/ConfirmationResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "ApiResponseTimesList": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "x-go-name": "Message"
        },
        "model": {
          "$ref": "#/definitions/TimesResponse"
        },
        "success": {
          "type": "boolean",
          "x-go-name": "Success"
        }
      },
      "x-go-package": "nats_node/docs/mfc"
    },
    "AppStateResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Error"
        },
        "state": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "State"
        },
        "state_name": {
          "type": "string",
          "x-go-name": "StateName"
        },
        "status": {
          "type": "string",
          "x-go-name": "Status"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "ConfirmationRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "x-go-name": "Email"
        },
        "firstName": {
          "type": "string",
          "x-go-name": "FirstName"
        },
        "lastName": {
          "type": "string",
          "x-go-name": "LastName"
        },
        "personId": {
          "type": "string",
          "x-go-name": "PersonId"
        },
        "phone": {
          "type": "string",
          "x-go-name": "Phone"
        },
        "reservationTimeId": {
          "type": "string",
          "x-go-name": "ReservationTimeId"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "ConfirmationResponse": {
      "type": "object",
      "properties": {
        "allDay": {
          "type": "boolean",
          "x-go-name": "AllDay"
        },
        "blocking": {
          "type": "boolean",
          "x-go-name": "Blocking"
        },
        "branch": {
          "type": "object",
          "properties": {
            "addressCity": {
              "type": "string",
              "x-go-name": "AddressCity"
            },
            "addressCountry": {
              "type": "object",
              "x-go-name": "AddressCountry"
            },
            "addressLine1": {
              "type": "string",
              "x-go-name": "AddressLine1"
            },
            "addressLine2": {
              "type": "object",
              "x-go-name": "AddressLine2"
            },
            "addressState": {
              "type": "object",
              "x-go-name": "AddressState"
            },
            "addressZip": {
              "type": "object",
              "x-go-name": "AddressZip"
            },
            "branchPrefix": {
              "type": "object",
              "x-go-name": "BranchPrefix"
            },
            "created": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Created"
            },
            "custom": {
              "type": "string",
              "x-go-name": "Custom"
            },
            "email": {
              "type": "string",
              "x-go-name": "Email"
            },
            "fullTimeZone": {
              "type": "string",
              "x-go-name": "FullTimeZone"
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "x-go-name": "Latitude"
            },
            "longitude": {
              "type": "number",
              "format": "double",
              "x-go-name": "Longitude"
            },
            "name": {
              "type": "string",
              "x-go-name": "Name"
            },
            "phone": {
              "type": "string",
              "x-go-name": "Phone"
            },
            "publicId": {
              "type": "string",
              "x-go-name": "PublicID"
            },
            "timeZone": {
              "type": "string",
              "x-go-name": "TimeZone"
            },
            "updated": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Updated"
            }
          },
          "x-go-name": "Branch"
        },
        "created": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Created"
        },
        "custom": {
          "type": "string",
          "x-go-name": "Custom"
        },
        "customers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "addressCity": {
                "type": "object",
                "x-go-name": "AddressCity"
              },
              "addressCountry": {
                "type": "object",
                "x-go-name": "AddressCountry"
              },
              "addressLine1": {
                "type": "object",
                "x-go-name": "AddressLine1"
              },
              "addressLine2": {
                "type": "object",
                "x-go-name": "AddressLine2"
              },
              "addressState": {
                "type": "object",
                "x-go-name": "AddressState"
              },
              "addressZip": {
                "type": "object",
                "x-go-name": "AddressZip"
              },
              "consentIdentifier": {
                "type": "object",
                "x-go-name": "ConsentIdentifier"
              },
              "consentTimestamp": {
                "type": "object",
                "x-go-name": "ConsentTimestamp"
              },
              "created": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Created"
              },
              "custom": {
                "type": "object",
                "x-go-name": "Custom"
              },
              "dateOfBirth": {
                "type": "object",
                "x-go-name": "DateOfBirth"
              },
              "dateOfBirthWithoutTime": {
                "type": "object",
                "x-go-name": "DateOfBirthWithoutTime"
              },
              "deletionTimestamp": {
                "type": "string",
                "x-go-name": "DeletionTimestamp"
              },
              "email": {
                "type": "string",
                "x-go-name": "Email"
              },
              "externalId": {
                "type": "object",
                "x-go-name": "ExternalID"
              },
              "firstName": {
                "type": "string",
                "x-go-name": "FirstName"
              },
              "identificationNumber": {
                "type": "object",
                "x-go-name": "IdentificationNumber"
              },
              "lastInteractionTimestamp": {
                "type": "string",
                "x-go-name": "LastInteractionTimestamp"
              },
              "lastName": {
                "type": "string",
                "x-go-name": "LastName"
              },
              "name": {
                "type": "string",
                "x-go-name": "Name"
              },
              "phone": {
                "type": "string",
                "x-go-name": "Phone"
              },
              "publicId": {
                "type": "string",
                "x-go-name": "PublicID"
              },
              "retentionPolicy": {
                "type": "string",
                "x-go-name": "RetentionPolicy"
              },
              "updated": {
                "type": "object",
                "x-go-name": "Updated"
              }
            }
          },
          "x-go-name": "Customers"
        },
        "end": {
          "type": "string",
          "x-go-name": "End"
        },
        "notes": {
          "type": "string",
          "x-go-name": "Notes"
        },
        "publicId": {
          "type": "string",
          "x-go-name": "PublicID"
        },
        "resource": {
          "type": "object",
          "properties": {
            "custom": {
              "type": "string",
              "x-go-name": "Custom"
            },
            "name": {
              "type": "string",
              "x-go-name": "Name"
            }
          },
          "x-go-name": "Resource"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "x-go-name": "Active"
              },
              "additionalCustomerDuration": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "AdditionalCustomerDuration"
              },
              "created": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Created"
              },
              "custom": {
                "type": "string",
                "x-go-name": "Custom"
              },
              "duration": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Duration"
              },
              "name": {
                "type": "string",
                "x-go-name": "Name"
              },
              "publicEnabled": {
                "type": "boolean",
                "x-go-name": "PublicEnabled"
              },
              "publicId": {
                "type": "string",
                "x-go-name": "PublicID"
              },
              "updated": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Updated"
              }
            }
          },
          "x-go-name": "Services"
        },
        "start": {
          "type": "string",
          "x-go-name": "Start"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "DatesResponse": {
      "type": "object",
      "properties": {
        "dates": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Dates"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "MfcListResponse": {
      "type": "object",
      "properties": {
        "branchList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "addressCity": {
                "type": "string",
                "x-go-name": "AddressCity"
              },
              "addressCountry": {
                "type": "object",
                "x-go-name": "AddressCountry"
              },
              "addressLine1": {
                "type": "string",
                "x-go-name": "AddressLine1"
              },
              "addressLine2": {
                "type": "object",
                "x-go-name": "AddressLine2"
              },
              "addressState": {
                "type": "object",
                "x-go-name": "AddressState"
              },
              "addressZip": {
                "type": "object",
                "x-go-name": "AddressZip"
              },
              "branchPrefix": {
                "type": "object",
                "x-go-name": "BranchPrefix"
              },
              "created": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Created"
              },
              "custom": {
                "type": "string",
                "x-go-name": "Custom"
              },
              "email": {
                "type": "string",
                "x-go-name": "Email"
              },
              "fullTimeZone": {
                "type": "string",
                "x-go-name": "FullTimeZone"
              },
              "latitude": {
                "type": "number",
                "format": "double",
                "x-go-name": "Latitude"
              },
              "longitude": {
                "type": "number",
                "format": "double",
                "x-go-name": "Longitude"
              },
              "name": {
                "type": "string",
                "x-go-name": "Name"
              },
              "phone": {
                "type": "string",
                "x-go-name": "Phone"
              },
              "publicId": {
                "type": "string",
                "x-go-name": "PublicID"
              },
              "timeZone": {
                "type": "string",
                "x-go-name": "TimeZone"
              },
              "updated": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Updated"
              }
            }
          },
          "x-go-name": "BranchList"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "MfcServicesResponse": {
      "type": "object",
      "properties": {
        "serviceList": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "x-go-name": "Active"
              },
              "additionalCustomerDuration": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "AdditionalCustomerDuration"
              },
              "created": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Created"
              },
              "custom": {
                "type": "string",
                "x-go-name": "Custom"
              },
              "duration": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Duration"
              },
              "name": {
                "type": "string",
                "x-go-name": "Name"
              },
              "publicEnabled": {
                "type": "boolean",
                "x-go-name": "PublicEnabled"
              },
              "publicId": {
                "type": "string",
                "x-go-name": "PublicID"
              },
              "updated": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Updated"
              }
            }
          },
          "x-go-name": "ServiceList"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "ReservationCodeResponse": {
      "type": "object",
      "properties": {
        "appointment": {
          "type": "object",
          "properties": {
            "allDay": {
              "type": "boolean",
              "x-go-name": "AllDay"
            },
            "blocking": {
              "type": "boolean",
              "x-go-name": "Blocking"
            },
            "branch": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "ID"
                },
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                },
                "publicId": {
                  "type": "string",
                  "x-go-name": "PublicID"
                }
              },
              "x-go-name": "Branch"
            },
            "created": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Created"
            },
            "custom": {
              "type": "string",
              "x-go-name": "Custom"
            },
            "customers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string",
                    "x-go-name": "FirstName"
                  },
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "x-go-name": "ID"
                  },
                  "lastName": {
                    "type": "string",
                    "x-go-name": "LastName"
                  },
                  "name": {
                    "type": "string",
                    "x-go-name": "Name"
                  },
                  "publicId": {
                    "type": "string",
                    "x-go-name": "PublicID"
                  }
                }
              },
              "x-go-name": "Customers"
            },
            "end": {
              "type": "string",
              "x-go-name": "End"
            },
            "id": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "ID"
            },
            "notes": {
              "type": "string",
              "x-go-name": "Notes"
            },
            "publicId": {
              "type": "string",
              "x-go-name": "PublicID"
            },
            "qpId": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "QpID"
            },
            "resource": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64",
                  "x-go-name": "ID"
                },
                "name": {
                  "type": "string",
                  "x-go-name": "Name"
                }
              },
              "x-go-name": "Resource"
            },
            "services": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64",
                    "x-go-name": "ID"
                  },
                  "name": {
                    "type": "string",
                    "x-go-name": "Name"
                  },
                  "publicId": {
                    "type": "string",
                    "x-go-name": "PublicID"
                  }
                }
              },
              "x-go-name": "Services"
            },
            "start": {
              "type": "string",
              "x-go-name": "Start"
            },
            "status": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Status"
            },
            "title": {
              "type": "string",
              "x-go-name": "Title"
            },
            "updated": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Updated"
            }
          },
          "x-go-name": "Appointment"
        },
        "meta": {
          "type": "object",
          "properties": {
            "arguments": {
              "type": "object",
              "x-go-name": "Arguments"
            },
            "end": {
              "type": "string",
              "x-go-name": "End"
            },
            "fields": {
              "type": "string",
              "x-go-name": "Fields"
            },
            "limit": {
              "type": "object",
              "x-go-name": "Limit"
            },
            "offset": {
              "type": "object",
              "x-go-name": "Offset"
            },
            "start": {
              "type": "string",
              "x-go-name": "Start"
            },
            "totalResults": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "TotalResults"
            }
          },
          "x-go-name": "Meta"
        },
        "notifications": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-go-name": "Notifications"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "ReservationRequestData": {
      "type": "object",
      "properties": {
        "branch": {
          "type": "string",
          "x-go-name": "Branch"
        },
        "date": {
          "type": "string",
          "x-go-name": "Date"
        },
        "serviceId": {
          "type": "string",
          "x-go-name": "ServiceId"
        },
        "time": {
          "type": "string",
          "x-go-name": "Time"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "ReserveResponse": {
      "type": "object",
      "properties": {
        "allDay": {
          "type": "boolean",
          "x-go-name": "AllDay"
        },
        "blocking": {
          "type": "boolean",
          "x-go-name": "Blocking"
        },
        "branch": {
          "type": "object",
          "properties": {
            "addressCity": {
              "type": "string",
              "x-go-name": "AddressCity"
            },
            "addressCountry": {
              "type": "object",
              "x-go-name": "AddressCountry"
            },
            "addressLine1": {
              "type": "string",
              "x-go-name": "AddressLine1"
            },
            "addressLine2": {
              "type": "object",
              "x-go-name": "AddressLine2"
            },
            "addressState": {
              "type": "object",
              "x-go-name": "AddressState"
            },
            "addressZip": {
              "type": "object",
              "x-go-name": "AddressZip"
            },
            "branchPrefix": {
              "type": "object",
              "x-go-name": "BranchPrefix"
            },
            "created": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Created"
            },
            "custom": {
              "type": "string",
              "x-go-name": "Custom"
            },
            "email": {
              "type": "string",
              "x-go-name": "Email"
            },
            "fullTimeZone": {
              "type": "string",
              "x-go-name": "FullTimeZone"
            },
            "latitude": {
              "type": "number",
              "format": "double",
              "x-go-name": "Latitude"
            },
            "longitude": {
              "type": "number",
              "format": "double",
              "x-go-name": "Longitude"
            },
            "name": {
              "type": "string",
              "x-go-name": "Name"
            },
            "phone": {
              "type": "string",
              "x-go-name": "Phone"
            },
            "publicId": {
              "type": "string",
              "x-go-name": "PublicID"
            },
            "timeZone": {
              "type": "string",
              "x-go-name": "TimeZone"
            },
            "updated": {
              "type": "integer",
              "format": "int64",
              "x-go-name": "Updated"
            }
          },
          "x-go-name": "Branch"
        },
        "created": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Created"
        },
        "custom": {
          "type": "object",
          "x-go-name": "Custom"
        },
        "customers": {
          "type": "array",
          "items": {
            "type": "object"
          },
          "x-go-name": "Customers"
        },
        "end": {
          "type": "string",
          "x-go-name": "End"
        },
        "notes": {
          "type": "object",
          "x-go-name": "Notes"
        },
        "publicId": {
          "type": "string",
          "x-go-name": "PublicID"
        },
        "resource": {
          "type": "object",
          "properties": {
            "custom": {
              "type": "string",
              "x-go-name": "Custom"
            },
            "name": {
              "type": "string",
              "x-go-name": "Name"
            }
          },
          "x-go-name": "Resource"
        },
        "services": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "active": {
                "type": "boolean",
                "x-go-name": "Active"
              },
              "additionalCustomerDuration": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "AdditionalCustomerDuration"
              },
              "created": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Created"
              },
              "custom": {
                "type": "string",
                "x-go-name": "Custom"
              },
              "duration": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Duration"
              },
              "name": {
                "type": "string",
                "x-go-name": "Name"
              },
              "publicEnabled": {
                "type": "boolean",
                "x-go-name": "PublicEnabled"
              },
              "publicId": {
                "type": "string",
                "x-go-name": "PublicID"
              },
              "updated": {
                "type": "integer",
                "format": "int64",
                "x-go-name": "Updated"
              }
            }
          },
          "x-go-name": "Services"
        },
        "start": {
          "type": "string",
          "x-go-name": "Start"
        },
        "status": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Status"
        },
        "title": {
          "type": "string",
          "x-go-name": "Title"
        },
        "updated": {
          "type": "integer",
          "format": "int64",
          "x-go-name": "Updated"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    },
    "TimesResponse": {
      "type": "object",
      "properties": {
        "times": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "x-go-name": "Times"
        }
      },
      "x-go-package": "nats_node/http/model/json"
    }
  },
  "responses": {
    "ApiResponseDatesList": {
      "description": "Модель данных возвращает список дат доступных для ззаписи",
      "schema": {
        "$ref": "#/definitions/ApiResponseDatesList"
      }
    },
    "ApiResponseGetAppState": {
      "description": "Модель данных возвращает информацию по заявлению",
      "schema": {
        "$ref": "#/definitions/ApiResponseGetAppState"
      }
    },
    "ApiResponseGetReservationCode": {
      "description": "Модель данных возвращает информацию по записи",
      "schema": {
        "$ref": "#/definitions/ApiResponseGetReservationCode"
      }
    },
    "ApiResponseMfcList": {
      "description": "Модель данных возвращает список услуг и сервисов МФЦ",
      "schema": {
        "$ref": "#/definitions/ApiResponseMfcServicesList"
      }
    },
    "ApiResponseReserveTime": {
      "description": "Модель данных возвращает информацию о зарезервированном времени, мфц и услуге",
      "schema": {
        "$ref": "#/definitions/ApiResponseReserveTime"
      }
    },
    "ApiResponseTimeConfirmation": {
      "description": "Модель данных возвращает информацию о подтверждении записи",
      "schema": {
        "$ref": "#/definitions/ApiResponseTimeConfirmation"
      }
    },
    "ApiResponseTimesList": {
      "description": "Модель данных возвращает список времен доступных для записи",
      "schema": {
        "$ref": "#/definitions/ApiResponseTimesList"
      }
    }
  },
  "securityDefinitions": {
    "basic": {
      "type": "basic"
    }
  }
}